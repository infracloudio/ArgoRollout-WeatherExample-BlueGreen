apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-weather-app
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-weather-app
  template:
    metadata:
      labels:
        app: rollout-weather-app
    spec:
      containers:
      - name: rollouts-demo
        image: docker.io/atulinfracloud/weathersample:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: weather-test-app-hyd
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: weather-test-app-ny
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false

---
apiVersion: v1
kind: Service
metadata:
  name: weather-test-app-hyd
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  selector:
    app: rollout-weather-app
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 5000
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: weather-test-app-ny
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  selector:
    app: rollout-weather-app
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 5000
  type: LoadBalancer



